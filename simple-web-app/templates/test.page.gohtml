{{ template "base" .}}

{{ define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">Design Patterns in GO</h1>
                <hr>
                <h3>Factory</h3>
                <div>
                    {{/*                click button call backend for music or tv show when call respective handler*/}}
                    <a href=javascript:void(0); id="music-factory-btn" class="btn btn outline-secondary">Get music from
                        factory</a>
                    <a href=javascript:void(0); id="television-factory-btn" class="btn btn outline-secondary">Get
                        television from factory</a>
                </div>
                <div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="music-factory-output"><span class="text-muted">Nothing received yet...</span></pre>
                    {{/*                    <pre id="television-factory-output"><span class="text-muted">Nothing received yet...</span></pre>*/}}
                </div>

                <hr class="mt-4">

                <h3 class="mt-3">Abstract Factory</h3>
                <div>
                    <a href=javascript:void(0); id="music-abstract-factory-btn" class="btn btn outline-secondary">
                        Get music from abstract factory
                    </a>
                    <a href=javascript:void(0); id="television-abstract-factory-btn" class="btn btn outline-secondary">
                        Get television from abstract factory
                    </a>
                </div>
                <div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="abstract-output"><span class="text-muted">Nothing received yet...</span></pre>
                </div>

                <h3 class="mt-3">Builder</h3>
                <div>
                    <a href=javascript:void(0); id="music-builder-btn" class="btn btn outline-secondary">
                        Build music
                    </a>
                    <a href=javascript:void(0); id="television-builder-btn" class="btn btn outline-secondary">
                        Build television
                    </a>
                </div>
                <div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="builder-output"><span class="text-muted">Nothing received yet...</span></pre>
                </div>

                <hr class="mt-4">
                <h3 class="mt-3">Abstract Factory II</h3>
                <form>

                    <div class="row mb-3">
                        <label for="entertainment" class="col-sm-2 col col-form-label">Entertainment</label>
                        <select id="entertainment" class="form-select">
                            <option selected>Choose</option>
                            <option value="music-video-clips">Music Video Clips</option>
                            <option value="song-list">Music Albums</option>
                            <option value="tv-shows">TV Shows</option>
                        </select>
                    </div>
                    <div class="row mb-3">
                        <label for="media-type" class="col-sm-2 col-form-label">MediaType</label>
                        <input type="text" class="form-control" id="media-type">
                    </div>

                    <a href=javascript:void(0); id="abstract-factory-ii-btn" class="btn btn-outline-secondary">
                        Get from abstract factory
                    </a>
                </form>
                <div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="abstract-factory-ii-output"><span class="text-muted">Nothing received yet</span></pre>
                </div>

            </div>
        </div>
    </div>
{{ end }}

{{ define "js" }}
    <script>
        let musicFactoryButton = document.getElementById("music-factory-btn")
        let televisionFactoryButton = document.getElementById("television-factory-btn")
        let musicFactoryOutput = document.getElementById("music-factory-output")
        // let televisionFactoryOutput = document.getElementById("television-factory-output")

        let musicAbstractFactoryButton = document.getElementById("music-abstract-factory-btn")
        let televisionAbstractFactoryButton = document.getElementById("television-abstract-factory-btn")
        let abstractFactoryOutput = document.getElementById("abstract-output")

        let musicBuilderButton = document.getElementById("music-builder-btn")
        let televisionBuilderButton = document.getElementById("television-builder-btn")
        let builderOutput = document.getElementById("builder-output")

        // let abstractFactoryIIButton = document.getElementById("abstract-factory-ii-btn")

        document.addEventListener("DOMContentLoaded", function () {
            musicFactoryButton.addEventListener("click", function () {
                fetch("/api/music-factory", {method: "GET"})
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            musicFactoryOutput.innerHTML = `<span class="text-danger">${data.error}</span>`
                        } else {
                            musicFactoryOutput.innerHTML = JSON.stringify(data, undefined, 4)
                        }
                    })
            })

            televisionFactoryButton.addEventListener("click", function () {
                fetch("/api/television-factory", {method: "GET"})
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            televisionFactoryButton.innerHTML = `<span class="text-danger">${data.error}</span>`
                        } else {
                            musicFactoryOutput.innerHTML = JSON.stringify(data, undefined, 4)
                        }
                    })
            })

            musicAbstractFactoryButton.addEventListener("click", function () {
                fetch("/api/music-abstract-factory", {method: "GET"})
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            abstractFactoryOutput.innerHTML = `<span class="text-danger">${data.error}</span>`
                        } else {
                            abstractFactoryOutput.innerHTML = JSON.stringify(data, undefined, 4)
                        }
                    })
            })

            televisionAbstractFactoryButton.addEventListener("click", function () {
                fetch("/api/television-abstract-factory", {method: "GET"})
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            abstractFactoryOutput.innerHTML = `<span class="text-danger">${data.error}</span>`
                        } else {
                            abstractFactoryOutput.innerHTML = JSON.stringify(data, undefined, 4)
                        }
                    })
            })

            musicBuilderButton.addEventListener("click", function () {
                fetch("/api/music-album-builder", {method: "GET"})
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            builderOutput.innerHTML = `<span class="text-danger">${data.error}</span>`
                        } else {
                            builderOutput.innerHTML = JSON.stringify(data, undefined, 4)
                        }
                    })
            })

            televisionBuilderButton.addEventListener("click", function () {
                fetch("/api/television-builder", {method: "GET"})
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            builderOutput.innerHTML = `<span class="text-danger">${data.error}</span>`
                        } else {
                            builderOutput.innerHTML = JSON.stringify(data, undefined, 4)
                        }
                    })
            })

        })

    </script>
{{ end }}